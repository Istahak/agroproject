import {
  AnimationSettings,
  Deferred,
  DropDownButton,
  Item,
  ProgressButton,
  SpinSettings,
  SplitButton,
  createButtonGroup,
  getModel,
  setBlankIconStyle,
  upDownKeyHandler
} from "./chunk-AIJSAS65.js";
import {
  ComplexBase,
  ComponentBase,
  applyMixins
} from "./chunk-7EBEI57B.js";
import "./chunk-OQJUKZWL.js";
import "./chunk-HA4VELSK.js";
import {
  require_react
} from "./chunk-BZ5DSBWL.js";
import {
  __toESM
} from "./chunk-GFT2G5UO.js";

// node_modules/@syncfusion/ej2-react-splitbuttons/src/drop-down-button/items-directive.js
var __extends = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (b2.hasOwnProperty(p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var DropDownButtonItemDirective = (
  /** @class */
  function(_super) {
    __extends(DropDownButtonItemDirective2, _super);
    function DropDownButtonItemDirective2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    DropDownButtonItemDirective2.moduleName = "dropDownButtonItem";
    return DropDownButtonItemDirective2;
  }(ComplexBase)
);
var DropDownButtonItemsDirective = (
  /** @class */
  function(_super) {
    __extends(DropDownButtonItemsDirective2, _super);
    function DropDownButtonItemsDirective2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    DropDownButtonItemsDirective2.propertyName = "items";
    DropDownButtonItemsDirective2.moduleName = "dropDownButtonItems";
    return DropDownButtonItemsDirective2;
  }(ComplexBase)
);

// node_modules/@syncfusion/ej2-react-splitbuttons/src/drop-down-button/dropdownbutton.component.js
var React = __toESM(require_react());
var __extends2 = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (b2.hasOwnProperty(p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var DropDownButtonComponent = (
  /** @class */
  function(_super) {
    __extends2(DropDownButtonComponent2, _super);
    function DropDownButtonComponent2(props) {
      var _this = _super.call(this, props) || this;
      _this.initRenderCalled = false;
      _this.checkInjectedModules = false;
      _this.directivekeys = { "dropDownButtonItems": "dropDownButtonItem" };
      _this.statelessTemplateProps = null;
      _this.templateProps = null;
      _this.immediateRender = true;
      _this.portals = [];
      return _this;
    }
    DropDownButtonComponent2.prototype.render = function() {
      if ((this.element && !this.initRenderCalled || this.refreshing) && !this.isReactForeceUpdate) {
        _super.prototype.render.call(this);
        this.initRenderCalled = true;
      } else {
        return React.createElement("button", this.getDefaultAttributes(), [].concat(this.props.children, this.portals));
      }
    };
    return DropDownButtonComponent2;
  }(DropDownButton)
);
applyMixins(DropDownButtonComponent, [ComponentBase, React.Component]);

// node_modules/@syncfusion/ej2-react-splitbuttons/src/split-button/items-directive.js
var __extends3 = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (b2.hasOwnProperty(p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var SplitButtonItemDirective = (
  /** @class */
  function(_super) {
    __extends3(SplitButtonItemDirective2, _super);
    function SplitButtonItemDirective2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    SplitButtonItemDirective2.moduleName = "splitButtonItem";
    return SplitButtonItemDirective2;
  }(ComplexBase)
);
var SplitButtonItemsDirective = (
  /** @class */
  function(_super) {
    __extends3(SplitButtonItemsDirective2, _super);
    function SplitButtonItemsDirective2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    SplitButtonItemsDirective2.propertyName = "items";
    SplitButtonItemsDirective2.moduleName = "splitButtonItems";
    return SplitButtonItemsDirective2;
  }(ComplexBase)
);

// node_modules/@syncfusion/ej2-react-splitbuttons/src/split-button/splitbutton.component.js
var React2 = __toESM(require_react());
var __extends4 = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (b2.hasOwnProperty(p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var SplitButtonComponent = (
  /** @class */
  function(_super) {
    __extends4(SplitButtonComponent2, _super);
    function SplitButtonComponent2(props) {
      var _this = _super.call(this, props) || this;
      _this.initRenderCalled = false;
      _this.checkInjectedModules = false;
      _this.directivekeys = { "splitButtonItems": "splitButtonItem" };
      _this.statelessTemplateProps = null;
      _this.templateProps = null;
      _this.immediateRender = true;
      _this.portals = [];
      return _this;
    }
    SplitButtonComponent2.prototype.render = function() {
      if ((this.element && !this.initRenderCalled || this.refreshing) && !this.isReactForeceUpdate) {
        _super.prototype.render.call(this);
        this.initRenderCalled = true;
      } else {
        return React2.createElement("button", this.getDefaultAttributes(), [].concat(this.props.children, this.portals));
      }
    };
    return SplitButtonComponent2;
  }(SplitButton)
);
applyMixins(SplitButtonComponent, [ComponentBase, React2.Component]);

// node_modules/@syncfusion/ej2-react-splitbuttons/src/progress-button/progressbutton.component.js
var React3 = __toESM(require_react());
var __extends5 = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (b2.hasOwnProperty(p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ProgressButtonComponent = (
  /** @class */
  function(_super) {
    __extends5(ProgressButtonComponent2, _super);
    function ProgressButtonComponent2(props) {
      var _this = _super.call(this, props) || this;
      _this.initRenderCalled = false;
      _this.checkInjectedModules = false;
      _this.statelessTemplateProps = null;
      _this.templateProps = null;
      _this.immediateRender = true;
      _this.portals = [];
      return _this;
    }
    ProgressButtonComponent2.prototype.render = function() {
      if ((this.element && !this.initRenderCalled || this.refreshing) && !this.isReactForeceUpdate) {
        _super.prototype.render.call(this);
        this.initRenderCalled = true;
      } else {
        return React3.createElement("button", this.getDefaultAttributes(), [].concat(this.props.children, this.portals));
      }
    };
    return ProgressButtonComponent2;
  }(ProgressButton)
);
applyMixins(ProgressButtonComponent, [ComponentBase, React3.Component]);
export {
  AnimationSettings,
  Deferred,
  DropDownButton,
  DropDownButtonComponent,
  DropDownButtonItemDirective,
  DropDownButtonItemsDirective,
  Item,
  ProgressButton,
  ProgressButtonComponent,
  SpinSettings,
  SplitButton,
  SplitButtonComponent,
  SplitButtonItemDirective,
  SplitButtonItemsDirective,
  createButtonGroup,
  getModel,
  setBlankIconStyle,
  upDownKeyHandler
};
//# sourceMappingURL=@syncfusion_ej2-react-splitbuttons.js.map
